name: Prod deploy
on:
  repository_dispatch:
    types: [strapi_updated]
  push:
    branches:
      - master
#   release:
#     types: [published]

jobs:
  publish-docker-images:
    name: Publish docker images
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-amd64-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-amd64-

      - name: Cache .next
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.docker-box.richardwillis.info
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Update version cache
        run: |
          date > VERSION

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: registry.docker-box.richardwillis.info/${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            STRAPI_ENDPOINT=${{ secrets.STRAPI_ENDPOINT }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Extract .next cache
        run: |
          docker pull registry.docker-box.richardwillis.info/${{ github.repository }}:latest
          docker run -d --name helper registry.docker-box.richardwillis.info/${{ github.repository }}:latest tail -f /dev/null
          docker cp helper:/app/.next .
          docker stop helper
          docker rm helper

  publish-s3:
    name: Publish static assets to S3
    needs: [publish-docker-images]
    runs-on: ubuntu-20.04
    steps:
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.docker-box.richardwillis.info
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Copy static files from docker image
        run: |
          docker pull registry.docker-box.richardwillis.info/${{ github.repository }}:latest
          docker run -d --name helper registry.docker-box.richardwillis.info/${{ github.repository }}:latest tail -f /dev/null
          docker cp helper:/app/.next .
          docker stop helper
          docker rm helper

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Sync static assets to S3
        run: aws s3 sync .next/static s3://${{ secrets.AWS_S3_BUCKET }}/_next/static --cache-control public,max-age=31536000,immutable --size-only

      # - name: Sync static assets to S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --cache-control public,max-age=31536000,immutable --size-only
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-1'
      #     SOURCE_DIR: '.next/static'
      #     DEST_DIR: '_next/static'

  deploy:
    name: Deploy app
    runs-on: ubuntu-20.04
    needs: [publish-s3]
    steps:
      - name: Deploy
        run: |
          curl --fail -X POST "$DEPLOY_ENDPOINT" || exit 1
        env:
          DEPLOY_ENDPOINT: '${{ secrets.DEPLOY_ENDPOINT }}'
